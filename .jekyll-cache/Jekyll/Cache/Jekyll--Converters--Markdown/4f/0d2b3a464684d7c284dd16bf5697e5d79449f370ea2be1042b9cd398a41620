I"%X<h1 id="0-生成traintxt">0. 生成train.txt</h1>

<blockquote>
  <p>像一个文件夹代表一类的数据集，我们可以将它的文件名读取出来，按照{ 文件名;类别 }的格式将它们保存到train.txt文件中以供我们使用；同理，对于语义分割或目标检测的数据集，我们按照 { img;label } 的格式保存到train.txt文件中。</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">文件目录:</code></p>

<p><img src="https://img-blog.csdnimg.cn/20210313143137962.png" /></p>

<p>这里我们先从ImageNet数据集每个类别中随机抽取30%来作为训练集，剩下的70%以后再用。</p>

<p><code class="language-plaintext highlighter-rouge">to_train_txt.py</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">os</span><span class="p">,</span> <span class="n">random</span>

<span class="n">_label</span> <span class="o">=</span> <span class="p">{</span><span class="s">'n01924916'</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s">'n01943899'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'n01950731'</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span> <span class="s">'n01968897'</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="s">'n02317335'</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span> <span class="s">'n02319095'</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="s">'n02321529'</span><span class="p">:</span><span class="mi">6</span><span class="p">}</span>

<span class="n">train_path</span> <span class="o">=</span> <span class="s">'./train/'</span>

<span class="n">pathDir</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">train_path</span><span class="p">)</span>

<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./train_3.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>
<span class="n">ff</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'./train_7.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>

<span class="k">for</span> <span class="n">ii</span> <span class="ow">in</span> <span class="n">pathDir</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">ii</span> <span class="o">!=</span> <span class="s">'.DS_Store'</span><span class="p">:</span>
        <span class="n">label</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">_label</span><span class="p">[</span><span class="n">ii</span><span class="p">])</span>
        
        <span class="n">rate</span> <span class="o">=</span> <span class="mf">0.3</span>
        <span class="n">filename</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">train_path</span> <span class="o">+</span> <span class="n">ii</span><span class="p">)</span>
        <span class="n">filenumber</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
        <span class="n">picknumber</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">filenumber</span> <span class="o">*</span> <span class="n">rate</span><span class="p">)</span>

        <span class="n">sample</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">sample</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">picknumber</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">ob</span> <span class="ow">in</span> <span class="n">filename</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">ob</span> <span class="ow">in</span> <span class="n">sample</span><span class="p">:</span>
                <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">ii</span> <span class="o">+</span> <span class="s">'/'</span> <span class="o">+</span> <span class="n">ob</span> <span class="o">+</span> <span class="s">';'</span> <span class="o">+</span> <span class="n">label</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">ii</span> <span class="o">+</span> <span class="s">'/'</span> <span class="o">+</span> <span class="n">ob</span> <span class="o">+</span> <span class="s">';'</span> <span class="o">+</span> <span class="n">label</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>


<span class="n">f</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
<span class="n">ff</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">部分train_3.txt展示:</code></p>

<pre><code class="language-Bash">...

n02319095/n02319095_350.JPEG;5
n02319095/n02319095_3527.JPEG;5
n02319095/n02319095_10100.JPEG;5
n02319095/n02319095_583.JPEG;5
n02319095/n02319095_1263.JPEG;5
n02319095/n02319095_8412.JPEG;5
n02319095/n02319095_7026.JPEG;5
n02319095/n02319095_2398.JPEG;5
n02319095/n02319095_7030.JPEG;5
n02319095/n02319095_487.JPEG;5
n02319095/n02319095_6733.JPEG;5
n02319095/n02319095_1019.JPEG;5
n02319095/n02319095_8238.JPEG;5
n02319095/n02319095_4077.JPEG;5
n02319095/n02319095_4630.JPEG;5
n02319095/n02319095_444.JPEG;5
n02319095/n02319095_1936.JPEG;5
n02319095/n02319095_2025.JPEG;5
n02319095/n02319095_956.JPEG;5
n02319095/n02319095_3272.JPEG;5

...
</code></pre>

<h2 id="randomsample函数用法">random.sample()函数用法</h2>

<p>用于随机截取指定长度的列表，不会改变原列表；</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">rs</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">sample</span><span class="p">(</span><span class="nb">list</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">rs</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>

<span class="c1"># [2, 4] 
# [0, 1, 2, 3, 4]        
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p><strong>PyTorch输入数据Pipline：</strong></p>

<ol>
  <li>创建一个<code class="language-plaintext highlighter-rouge">Dataset</code>对象;</li>
  <li>创建一个<code class="language-plaintext highlighter-rouge">DataLoader</code>对象;</li>
  <li>循环这个<code class="language-plaintext highlighter-rouge">DataLoader</code>对象，将<code class="language-plaintext highlighter-rouge">img</code>和<code class="language-plaintext highlighter-rouge">label</code>加载到模型中进行训练;</li>
</ol>

<h1 id="1-创建dataset对象">1. 创建Dataset对象</h1>

<p>创建的时候需继承<code class="language-plaintext highlighter-rouge">from torch.utils.data.dataset import Dataset</code>类。</p>

<p><strong>Dataset中主要有3个方法:</strong></p>

<ol>
  <li><strong>init</strong>: 初始化信息，包括训练数据和标签的路径, transform信息等;</li>
  <li><strong>getitem</strong>: 在这个方法里根据传入的下标返回label和transform之后的图片tensor;</li>
  <li><strong>len</strong>: 返回Dataset的长度;</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<span class="kn">import</span> <span class="nn">torch</span>
<span class="kn">import</span> <span class="nn">torchvision.transforms</span> <span class="k">as</span> <span class="n">transforms</span>
<span class="kn">from</span> <span class="nn">torch.utils.data</span> <span class="kn">import</span> <span class="n">Dataset</span>


<span class="k">class</span> <span class="nc">MyDataset</span><span class="p">(</span><span class="n">Dataset</span><span class="p">):</span>  <span class="c1"># 创类：MyDataset,继承torch.utils.data.Dataset
</span>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">datatxt</span><span class="p">,</span> <span class="n">transform</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">MyDataset</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">()</span>
        <span class="n">fh</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">datatxt</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span>  <span class="c1"># 打开txt，读取内容
</span>        <span class="n">data</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">fh</span><span class="p">:</span>  <span class="c1"># 按行循环txt文本中的内容
</span>            <span class="n">words</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">';'</span><span class="p">)</span>  <span class="c1"># 通过指定分隔符对字符串进行切片
</span>            <span class="n">data</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="n">words</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">int</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="mi">1</span><span class="p">])))</span>  <span class="c1"># 把txt里的内容读入data列表保存，words[0]是图片信息，words[1]是label
</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">transform</span>

    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>  <span class="c1"># 按照索引读取每个元素的具体内容
</span>        <span class="n">fn</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>  <span class="c1"># fn是图片path
</span>        <span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">fn</span><span class="p">).</span><span class="n">convert</span><span class="p">(</span><span class="s">'RGB'</span><span class="p">)</span>  <span class="c1"># from PIL import Image
</span>
        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">transform</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>  <span class="c1"># 是否进行transform
</span>            <span class="n">img</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">img</span><span class="p">,</span> <span class="n">label</span>  <span class="c1"># return回哪些内容，在训练时循环读取每个batch，就能获得哪些内容
</span>
    <span class="k">def</span> <span class="nf">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>  <span class="c1"># 它返回的是数据集的长度，必须有
</span>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">)</span>


<span class="s">'''标准化、图片变换'''</span>
<span class="n">train_transforms</span> <span class="o">=</span> <span class="n">transforms</span><span class="p">.</span><span class="n">Compose</span><span class="p">([</span>
    <span class="n">transforms</span><span class="p">.</span><span class="n">RandomCrop</span><span class="p">(</span><span class="mi">224</span><span class="p">),</span>
    <span class="n">transforms</span><span class="p">.</span><span class="n">RandomHorizontalFlip</span><span class="p">(),</span>
    <span class="n">transforms</span><span class="p">.</span><span class="n">ToTensor</span><span class="p">()</span>
    <span class="p">])</span>

<span class="n">train_data</span> <span class="o">=</span> <span class="n">MyDataset</span><span class="p">(</span><span class="n">datatxt</span><span class="o">=</span><span class="s">'train.txt'</span><span class="p">,</span> <span class="n">transform</span><span class="o">=</span><span class="n">train_transforms</span><span class="p">)</span>

<span class="n">train_loader</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">utils</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">DataLoader</span><span class="p">(</span><span class="n">dataset</span><span class="o">=</span><span class="n">train_data</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="s">""" 训练时:"""</span>
<span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_epoches</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">dataloader</span><span class="p">):</span>
        <span class="p">...</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="transform各参数的作用">transform各参数的作用：</h2>

<pre><code class="language-Bash">1. 裁剪——Crop

中心裁剪：transforms.CenterCrop
随机裁剪：transforms.RandomCrop
随机长宽比裁剪：transforms.RandomResizedCrop
上下左右中心裁剪：transforms.FiveCrop
上下左右中心裁剪后翻转，transforms.TenCrop

2. 翻转和旋转——Flip and Rotation

依概率p水平翻转：transforms.RandomHorizontalFlip(p=0.5)
依概率p垂直翻转：transforms.RandomVerticalFlip(p=0.5)
随机旋转：transforms.RandomRotation

3. 图像变换

resize：transforms.Resize
标准化：transforms.Normalize
转为tensor，并归一化至[0-1]：transforms.ToTensor
填充：transforms.Pad
修改亮度、对比度和饱和度：transforms.ColorJitter
转灰度图：transforms.Grayscale
线性变换：transforms.LinearTransformation()
仿射变换：transforms.RandomAffine
依概率p转为灰度图：transforms.RandomGrayscale
将数据转换为PILImage：transforms.ToPILImage
transforms.Lambda：Apply a user-defined lambda as a transform.

4. 对transforms操作，使数据增强更灵活

transforms.RandomChoice(transforms)， 从给定的一系列transforms中选一个进行操作
transforms.RandomApply(transforms, p=0.5)，给一个transform加上概率，依概率进行操作
transforms.RandomOrder，将transforms中的操作随机打乱

</code></pre>

<h1 id="2-创建dataloader对象">2. 创建DataLoader对象</h1>

<p><code class="language-plaintext highlighter-rouge">DataLoader: </code>将自定义的Dataset根据batch size大小、是否shuffle等封装成一个Batch Size大小的Tensor，用于后面的训练。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">torch.utils.data</span> <span class="kn">import</span> <span class="n">Dataset</span><span class="p">,</span> <span class="n">DataLoader</span>

<span class="n">train_loader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span><span class="n">dataset</span><span class="o">=</span><span class="n">train_data</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="3-循环dataloader进行训练">3. 循环DataLoader进行训练</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_epoches</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">dataloader</span><span class="p">):</span>
        <span class="p">...</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="-注意">** 注意</h1>

<p>损失函数<code class="language-plaintext highlighter-rouge">torch.nn.CrossEntropyLoss()</code>中已经包含了<code class="language-plaintext highlighter-rouge">Softmax</code>函数，所以我们的神经网络直接线性输出即可。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">net</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">50</span><span class="p">),</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">(),</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span>
            <span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="引用">#.引用</h1>

<ol>
  <li><a href="https://blog.csdn.net/u011995719/article/details/85107009">PyTorch 学习笔记（三）：transforms的二十二个方法</a></li>
  <li><a href="https://zh.d2l.ai/index.html">动手学深度学习</a></li>
  <li><a href="https://blog.csdn.net/hnu_zzt/article/details/85092092?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.control&amp;dist_request_id=1328642.24603.16156240016207327&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.control">pytorch一步一步在VGG16上训练自己的数据集</a></li>
  <li><a href="https://www.cnblogs.com/panchuangai/p/12567996.html">PyTorch ImageNet 基于预训练六大常用图片分类模型的实战</a></li>
  <li><a href="https://blog.csdn.net/m0_37163827/article/details/110521518">pytorch搭建分类网络并进行训练和测试</a></li>
  <li><a href="https://www.cnblogs.com/zhangxiann/p/13570884.html">二十二种 transforms 图片数据预处理方法</a></li>
</ol>
:ET