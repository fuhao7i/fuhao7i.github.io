---
layout:     post
title:      "Neural Network🦖1——上采样Upsampling详解"
subtitle:   " \"反卷积, 上采样, 插值算法\""
date:       2021-01-31 18:43:00
author:     "fuhao7i"
header-img: "img/in-post/nn.jpg"
catalog: true
tags:
    - Neural Network🦖
---

> 在做图像分割的时候，需要对图像进行像素级别的分类，因此在卷积提取到抽象特征后需要通过上采样将feature map还原到原图大小。常见的上采样方法有双线性插值(bilinear)、转置卷积、上采样(Upsampling)和上池化(Unpooling)等...

# 1. [双线性插值](https://www.jianshu.com/p/587c3a45df67)

`torch.nn.functional.interpolate(input, size=None, scale_factor=None, mode='bilinear', align_corners=None)实现`

根据给定的size或scale_factor参数来对输入进行下/上采样

使用的插值算法取决于参数mode的设置

```Bash
参数：

input (Tensor) – 输入张量

size (int or Tuple[int] or Tuple[int, int] or Tuple[int, int, int]) –输出大小.

scale_factor (float or Tuple[float]) – 指定输出为输入的多少倍数。如果输入为tuple，其也要制定为tuple类型

mode (str) – 可使用的上采样算法，有'nearest', 'linear', 'bilinear', 'bicubic' , 'trilinear'和'area'. 默认使用'nearest'

align_corners (bool, optional) –几何上，我们认为输入和输出的像素是正方形，而不是点。如果设置为True，则输入和输出张量由其角像素的中心点对齐，从而保留角像素处的值。如果设置为False，则输入和输出张量由它们的角像素的角点对齐，插值使用边界外值的边值填充;当scale_factor保持不变时，使该操作独立于输入大小。仅当使用的算法为'linear', 'bilinear', 'bilinear'or 'trilinear'时可以使用。默认设置为False
```

[图像缩放之双线性插值](https://blog.csdn.net/s12244315/article/details/49452175)

[...](https://www.pianshen.com/article/39612542/)

## #. 引用

1. [卷积神经网络算法_算法｜动图演示二维卷积神经网络的实现原理](https://blog.csdn.net/weixin_39976153/article/details/111362119)
2. [CNN卷积层、全连接层的参数量、计算量](https://zhuanlan.zhihu.com/p/77471991)
3. [神经网络卷积层的参数和计算量](https://blog.csdn.net/u011304078/article/details/114316574)